{
  "_args": [
    [
      {
        "raw": "swagger-ui",
        "scope": null,
        "escapedName": "swagger-ui",
        "name": null,
        "rawSpec": "swagger-ui",
        "spec": "/Users/mcmht507/wk/SCAL/scal-doc-test/swagger-ui",
        "type": "directory"
      },
      "/Users/mcmht507/wk/SCAL/scal-doc-test"
    ]
  ],
  "_from": "swagger-ui",
  "_id": "swagger-ui@3.3.1",
  "_inCache": true,
  "_location": "/swagger-ui",
  "_phantomChildren": {
    "sprintf-js": "1.0.3"
  },
  "_requested": {
    "raw": "swagger-ui",
    "scope": null,
    "escapedName": "swagger-ui",
    "name": null,
    "rawSpec": "swagger-ui",
    "spec": "/Users/mcmht507/wk/SCAL/scal-doc-test/swagger-ui",
    "type": "directory"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:swagger-ui",
  "_shasum": "0e853807405de8684cab1358edcc617c45efb0d0",
  "_shrinkwrap": null,
  "_spec": "swagger-ui",
  "_where": "/Users/mcmht507/wk/SCAL/scal-doc-test",
  "browserslist": [
    "> 1%",
    "last 2 versions",
    "IE 11"
  ],
  "bugs": {
    "url": "https://github.com/swagger-api/swagger-ui/issues"
  },
  "config": {
    "deps_check_dir": ".deps_check"
  },
  "contributors": [
    {
      "url": "in alphabetical order"
    },
    {
      "name": "Anna Bodnia",
      "email": "anna.bodnia@gmail.com"
    },
    {
      "name": "Buu Nguyen",
      "email": "buunguyen@gmail.com"
    },
    {
      "name": "Josh Ponelat",
      "email": "jponelat@gmail.com"
    },
    {
      "name": "Kyle Shockey",
      "email": "kyleshockey1@gmail.com"
    },
    {
      "name": "Robert Barnwell",
      "email": "robert@robertismy.name"
    },
    {
      "name": "Sahar Jafari",
      "email": "shr.jafari@gmail.com"
    }
  ],
  "dependencies": {
    "base64-js": "^1.2.0",
    "brace": "0.7.0",
    "classnames": "^2.2.5",
    "commonmark": "^0.28.1",
    "css.escape": "1.5.1",
    "deep-extend": "0.4.1",
    "expect": "1.20.2",
    "getbase": "^2.8.2",
    "ieee754": "^1.1.8",
    "immutable": "^3.x.x",
    "js-yaml": "^3.5.5",
    "lodash": "4.17.2",
    "matcher": "^0.1.2",
    "memoizee": "0.4.1",
    "promise-worker": "^1.1.1",
    "prop-types": "^15.5.10",
    "react": "^15.4.0",
    "react-addons-perf": "^15.4.0",
    "react-addons-shallow-compare": "0.14.8",
    "react-addons-test-utils": "^15.4.0",
    "react-collapse": "2.3.1",
    "react-dom": "^15.4.0",
    "react-height": "^2.0.0",
    "react-hot-loader": "1.3.1",
    "react-immutable-proptypes": "2.1.0",
    "react-markdown": "^2.5.0",
    "react-motion": "0.4.4",
    "react-object-inspector": "0.2.1",
    "react-redux": "^4.x.x",
    "react-split-pane": "0.1.57",
    "redux": "^3.x.x",
    "redux-immutable": "3.0.8",
    "redux-logger": "*",
    "remarkable": "^1.7.1",
    "reselect": "2.5.3",
    "sanitize-html": "^1.14.1",
    "scroll-to-element": "^2.0.0",
    "serialize-error": "2.0.0",
    "shallowequal": "0.2.2",
    "swagger-client": "^3.2.0",
    "url-parse": "^1.1.8",
    "webpack-dev-server": "2.5.0",
    "whatwg-fetch": "0.11.1",
    "worker-loader": "^0.7.1",
    "xml": "1.0.1",
    "yaml-js": "0.2.0"
  },
  "description": "[![NPM version](https://badge.fury.io/js/swagger-ui.svg)](http://badge.fury.io/js/swagger-ui)",
  "devDependencies": {
    "autoprefixer": "7.1.1",
    "babel-core": "^6.23.1",
    "babel-eslint": "^7.1.1",
    "babel-loader": "^7.1.0",
    "babel-plugin-module-alias": "^1.6.0",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-preset-es2015": "^6.22.0",
    "babel-preset-es2015-ie": "^6.6.2",
    "babel-preset-react": "^6.23.0",
    "babel-preset-stage-0": "^6.22.0",
    "babel-runtime": "^6.23.0",
    "chromedriver": "^2.30.1",
    "copy-webpack-plugin": "^4.0.1",
    "css-loader": "0.28.4",
    "deep-extend": "^0.5.0",
    "deepmerge": "^1.3.2",
    "enzyme": "^2.7.1",
    "eslint": "^4.1.1",
    "eslint-plugin-import": "^2.6.0",
    "eslint-plugin-react": "^7.1.0",
    "extract-text-webpack-plugin": "^2.1.2",
    "file-loader": "0.11.2",
    "git-describe": "^4.0.1",
    "imports-loader": "0.7.1",
    "json-loader": "0.5.4",
    "json-server": "^0.11.0",
    "karma": "^1.7.0",
    "karma-chrome-launcher": "^2.2.0",
    "karma-mocha": "^1.3.0",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-webpack": "2.0.3",
    "less": "2.7.2",
    "license-checker": "^11.0.0",
    "mocha": "^3.4.2",
    "nightwatch": "^0.9.16",
    "node-sass": "^4.5.0",
    "npm-run-all": "4.0.2",
    "null-loader": "0.1.1",
    "open": "0.0.5",
    "postcss-loader": "2.0.6",
    "raw-loader": "0.5.1",
    "react-hot-loader": "^1.3.1",
    "react-test-renderer": "^15.5.4",
    "rimraf": "^2.6.0",
    "sass-loader": "^6.0.2",
    "selenium-server-standalone-jar": "3.4.0",
    "standard": "^10.0.2",
    "standard-loader": "^6.0.1",
    "style-loader": "0.18.2",
    "url-loader": "0.5.9",
    "webpack": "^2.6.1",
    "webpack-bundle-size-analyzer": "^2.5.0"
  },
  "gitHead": "fa24b6aec8a2bcc419df0958a6df29c1ee2b77ef",
  "homepage": "https://github.com/swagger-api/swagger-ui#readme",
  "license": "Apache-2.0",
  "main": "dist/swagger-ui.js",
  "name": "swagger-ui",
  "optionalDependencies": {
    "webpack-dev-server": "2.5.0"
  },
  "readme": "# Swagger UI\n\n[![NPM version](https://badge.fury.io/js/swagger-ui.svg)](http://badge.fury.io/js/swagger-ui)\n\n## New!\n\n**This is the new version of swagger-ui, 3.x. Want to learn more? Check out our [FAQ](http://swagger.io/new-ui-faq/).**\n\n**üëâüèº Want to score an easy open-source contribution?** Check out our [Good first contribution](https://github.com/swagger-api/swagger-ui/issues?q=is%3Aissue+is%3Aopen+label%3A%22Good+first+contribution%22) label.\n\nAs a brand new version, written from the ground up, there are some known issues and unimplemented features. Check out the [Known Issues](#known-issues) section for more details.\n\nThis repository publishes to two different NPM modules:\n\n* [swagger-ui](https://www.npmjs.com/package/swagger-ui) is a traditional npm module intended for use in JavaScript web application projects that are capable of resolving dependencies (via Webpack, Browserify, etc).\n* [swagger-ui-dist](https://www.npmjs.com/package/swagger-ui-dist) is a dependency-free module that includes everything you need to serve Swagger-UI in a server-side project, or a web project that can't resolve npm module dependencies.\n\nFor the older version of swagger-ui, refer to the [*2.x branch*](https://github.com/swagger-api/swagger-ui/tree/2.x).\n\n## Compatibility\nThe OpenAPI Specification has undergone 5 revisions since initial creation in 2010.  Compatibility between swagger-ui and the OpenAPI Specification is as follows:\n\nSwagger UI Version | Release Date | OpenAPI Spec compatibility | Notes\n------------------ | ------------ | -------------------------- | -----\n3.3.1 | 2017-10-02 | 2.0, 3.0 | [tag v3.3.1](https://github.com/swagger-api/swagger-ui/tree/v3.3.1)\n3.0.21 | 2017-07-26 | 2.0 | [tag v3.0.21](https://github.com/swagger-api/swagger-ui/tree/v3.0.21)\n2.2.10 | 2017-01-04 | 1.1, 1.2, 2.0 | [tag v2.2.10](https://github.com/swagger-api/swagger-ui/tree/v2.2.10)\n2.1.5 | 2016-07-20 | 1.1, 1.2, 2.0 | [tag v2.1.5](https://github.com/swagger-api/swagger-ui/tree/v2.1.5)\n2.0.24 | 2014-09-12 | 1.1, 1.2 | [tag v2.0.24](https://github.com/swagger-api/swagger-ui/tree/v2.0.24)\n1.0.13 | 2013-03-08 | 1.1, 1.2 | [tag v1.0.13](https://github.com/swagger-api/swagger-ui/tree/v1.0.13)\n1.0.1 | 2011-10-11 | 1.0, 1.1 | [tag v1.0.1](https://github.com/swagger-api/swagger-ui/tree/v1.0.1)\n\n\n### How to run\n\n##### Easy start!  Docker\nYou can pull a pre-built docker image of the swagger-ui directly from Dockerhub:\n\n```\ndocker pull swaggerapi/swagger-ui\ndocker run -p 80:8080 swaggerapi/swagger-ui\n```\n\nWill start nginx with swagger-ui on port 80.\n\nOr you can provide your own swagger.json on your host\n\n```\ndocker run -p 80:8080 -e SWAGGER_JSON=/foo/swagger.json -v /bar:/foo swaggerapi/swagger-ui\n```\n\n##### Prerequisites\n- Node 6.x\n- NPM 3.x\n\nIf you just want to see your specs, open `dist/index.html` in your browser directly from your filesystem.\n\nIf you'd like to make modifications to the codebase, run the dev server with: `npm run dev`. A development server will open on `3200`.\n\nIf you'd like to rebuild the `/dist` folder with your codebase changes, run `npm run build`.\n\n\n##### Integration Tests\n\nYou will need JDK of version 7 or higher as instructed here\nhttp://nightwatchjs.org/gettingstarted#selenium-server-setup\n\nIntegration tests can be run locally with `npm run e2e` - be sure you aren't running a dev server when testing!\n\n\n##### Browser support\nSwagger UI works in the latest versions of Chrome, Safari, Firefox, Edge and IE11.\n\n### Known Issues\n\nTo help with the migration, here are the currently known issues with 3.X. This list will update regularly, and will not include features that were not implemented in previous versions.\n\n- Only part of the [parameters](#parameters) previously supported are available.\n- The JSON Form Editor is not implemented.\n- Support for `collectionFormat` is partial.\n- l10n (translations) is not implemented.\n- Relative path support for external files is not implemented.\n\n### Direct use of JS and CSS assets\nTo include the JS, CSS and image assets directly into a webpage, use the [swagger-ui-dist](https://www.npmjs.com/package/swagger-ui-dist) package.\nThe root directory of this package contains the contents of the _dist/_ directory of this repo.\nAs a node module, `swagger-ui-dist` also exports the `swagger-ui-bundle` and `swagger-ui-standalone-preset` objects.\n\n### SwaggerUIBundle\nTo use swagger-ui's bundles, you should take a look at the [source of swagger-ui html page](https://github.com/swagger-api/swagger-ui/blob/master/dist/index.html) and customize it. This basically requires you to instantiate a SwaggerUi object as below:\n\n```javascript\n  const ui = SwaggerUIBundle({\n      url: \"http://petstore.swagger.io/v2/swagger.json\",\n      dom_id: '#swagger-ui',\n      presets: [\n        SwaggerUIBundle.presets.apis,\n        SwaggerUIStandalonePreset\n      ],\n      plugins: [\n        SwaggerUIBundle.plugins.DownloadUrl\n      ],\n      layout: \"StandaloneLayout\"\n    })\n```\n\n#### OAuth2 configuration\nYou can configure OAuth2 authorization by calling `initOAuth` method with passed configs under the instance of `SwaggerUIBundle`\ndefault `client_id` and `client_secret`, `realm`, an application name `appName`, `scopeSeparator`, `additionalQueryStringParams`,\n`useBasicAuthenticationWithAccessCodeGrant`.\n\nConfig Name | Description\n--- | ---\nclient_id | Default clientId. MUST be a string\nclient_secret | Default clientSecret. MUST be a string\nrealm | realm query parameter (for oauth1) added to `authorizationUrl` and `tokenUrl` . MUST be a string\nappName | application name, displayed in authorization popup. MUST be a string\nscopeSeparator | scope separator for passing scopes, encoded before calling, default value is a space (encoded value `%20`). MUST be a string\nadditionalQueryStringParams | Additional query parameters added to `authorizationUrl` and `tokenUrl`. MUST be an object\nuseBasicAuthenticationWithAccessCodeGrant | Only activated for the `accessCode` flow.  During the `authorization_code` request to the `tokenUrl`, pass the [Client Password](https://tools.ietf.org/html/rfc6749#section-2.3.1) using the HTTP Basic Authentication scheme (`Authorization` header with `Basic base64encoded[client_id:client_secret]`).  The default is `false`\n\n```javascript\nconst ui = SwaggerUIBundle({...})\n\n// Method can be called in any place after calling constructor SwaggerUIBundle\nui.initOAuth({\n    clientId: \"your-client-id\",\n    clientSecret: \"your-client-secret-if-required\",\n    realm: \"your-realms\",\n    appName: \"your-app-name\",\n    scopeSeparator: \" \",\n    additionalQueryStringParams: {test: \"hello\"}\n  })\n```\n\nIf you'd like to use the bundle files via npm, check out the [`swagger-ui-dist` package](https://www.npmjs.com/package/swagger-ui-dist).\n\n#### Parameters\n\nParameters with dots in their names are single strings used to organize subordinate parameters, and are not indicative of a nested structure.\n\nParameter Name | Description\n--- | ---\nurl | The url pointing to API definition (normally `swagger.json` or `swagger.yaml`). Will be ignored if `urls` or `spec` is used.\nurls | An array of API definition objects (`{url: \"<url>\", name: \"<name>\"}`) used by Topbar plugin. When used and Topbar plugin is enabled, the `url` parameter will not be parsed. Names and URLs must be unique among all items in this array, since they're used as identifiers.\nurls.primaryName | When using `urls`, you can use this subparameter. If the value matches the name of a spec provided in `urls`, that spec will be displayed when Swagger-UI loads, instead of defaulting to the first spec in `urls`.\nspec | A JSON object describing the OpenAPI Specification. When used, the `url` parameter will not be parsed. This is useful for testing manually-generated specifications without hosting them.\nvalidatorUrl | By default, Swagger-UI attempts to validate specs against swagger.io's online validator. You can use this parameter to set a different validator URL, for example for locally deployed validators ([Validator Badge](https://github.com/swagger-api/validator-badge)). Setting it to `null` will disable validation.\ndom_id | The id of a dom element inside which SwaggerUi will put the user interface for swagger.\ndomNode | The HTML DOM element inside which SwaggerUi will put the user interface for swagger. Overrides `dom_id`.\noauth2RedirectUrl | OAuth redirect URL\ntagsSorter | Apply a sort to the tag list of each API. It can be 'alpha' (sort by paths alphanumerically) or a function (see [Array.prototype.sort()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort) to learn how to write a sort function). Two tag name strings are passed to the sorter for each pass. Default is the order determined by Swagger-UI.\noperationsSorter | Apply a sort to the operation list of each API. It can be 'alpha' (sort by paths alphanumerically), 'method' (sort by HTTP method) or a function (see Array.prototype.sort() to know how sort function works). Default is the order returned by the server unchanged.\ndefaultModelRendering | Controls how models are shown when the API is first rendered. (The user can always switch the rendering for a given model by clicking the 'Model' and 'Example Value' links.) It can be set to 'model' or 'example', and the default is 'example'.\ndefaultModelExpandDepth | The default expansion depth for models.  The default value is 1.\nconfigUrl | Configs URL\nparameterMacro | MUST be a function. Function to set default value to parameters. Accepts two arguments parameterMacro(operation, parameter). Operation and parameter are objects passed for context, both remain immutable\nmodelPropertyMacro | MUST be a function. Function to set default values to each property in model. Accepts one argument modelPropertyMacro(property), property is immutable\ndocExpansion | Controls the default expansion setting for the operations and tags. It can be 'list' (expands only the tags), 'full' (expands the tags and operations) or 'none' (expands nothing). The default is 'list'.\ndisplayOperationId | Controls the display of operationId in operations list. The default is `false`.\ndisplayRequestDuration | Controls the display of the request duration (in milliseconds) for `Try it out` requests. The default is `false`.\nmaxDisplayedTags | If set, limits the number of tagged operations displayed to at most this many. The default is to show all operations.\nfilter | If set, enables filtering. The top bar will show an edit box that you can use to filter the tagged operations that are shown. Can be true/false to enable or disable, or an explicit filter string in which case filtering will be enabled using that string as the filter expression. Filtering is case sensitive matching the filter expression anywhere inside the tag.\ndeepLinking | If set to `true`, enables dynamic deep linking for tags and operations. [Docs](https://github.com/swagger-api/swagger-ui/blob/master/docs/deep-linking.md)\nrequestInterceptor | MUST be a function.  Function to intercept try-it-out requests.  Accepts one argument requestInterceptor(request) and must return the potentially modified request.\nresponseInterceptor | MUST be a function.  Function to intercept try-it-out responses.  Accepts one argument responseInterceptor(response) and must return the potentially modified response.\nshowMutatedRequest | If set to `true` (the default), uses the mutated request returned from a rquestInterceptor to produce the curl command in the UI, otherwise the request before the requestInterceptor was applied is used.\n\n### Plugins\n\n#### Topbar plugin\nTopbar plugin enables top bar with input for spec path and explore button or a dropdown if `urls` is used. By default the plugin is enabled, and to disable it you need to remove Topbar plugin from presets in `src/standalone/index.js`:\n\n```javascript\nlet preset = [\n  // TopbarPlugin,\n  ConfigsPlugin,\n  () => {\n    return {\n      components: { StandaloneLayout }\n    }\n  }\n]\n```\n\n#### Configs plugin\nConfigs plugin allows to fetch external configs instead of passing them to `SwaggerUIBundle`. Fetched configs support two formats: JSON or yaml. The plugin is enabled by default.\nThere are three options of passing config:\n- add a query parameter `config` with URL to a server where the configs are hosted. For ex. http://petstore.swagger.io/?config=http://localhost:3001/config.yaml\n- add a config `configUrl` with URL to SwaggerUIBundle\n- change default configs in `swagger-config.yaml` *Note: after changing, the project must be re-built*\n\nThese options can be used altogether, the order of inheritance is following (from the lowest priority to the highest):\n`swagger-config.yaml` -> config passed to `SwaggerUIBundle` -> config fetched from `configUrl` passed to `SwaggerUIBundle` -> config fetched from URL passed as a query parameter `config`\n\n## CORS Support\n\nCORS is a technique to prevent websites from doing bad things with your personal data.  Most browsers + JavaScript toolkits not only support CORS but enforce it, which has implications for your API server which supports Swagger.\n\nYou can read about CORS here: http://www.w3.org/TR/cors.\n\nThere are two cases where no action is needed for CORS support:\n\n1. swagger-ui is hosted on the same server as the application itself (same host *and* port).\n2. The application is located behind a proxy that enables the required CORS headers. This may already be covered within your organization.\n\nOtherwise, CORS support needs to be enabled for:\n\n1. Your Swagger docs. For Swagger 2.0 it's the `swagger.json`/`swagger.yaml` and any externally `$ref`ed docs.\n2. For the `Try it now` button to work, CORS needs to be enabled on your API endpoints as well.\n\n### Testing CORS Support\n\nYou can verify CORS support with one of three techniques:\n\n- Curl your API and inspect the headers.  For instance:\n\n```bash\n$ curl -I \"http://petstore.swagger.io/v2/swagger.json\"\nHTTP/1.1 200 OK\nDate: Sat, 31 Jan 2015 23:05:44 GMT\nAccess-Control-Allow-Origin: *\nAccess-Control-Allow-Methods: GET, POST, DELETE, PUT, PATCH, OPTIONS\nAccess-Control-Allow-Headers: Content-Type, api_key, Authorization\nContent-Type: application/json\nContent-Length: 0\n```\n\nThis tells us that the petstore resource listing supports OPTIONS, and the following headers:  `Content-Type`, `api_key`, `Authorization`.\n\n- Try swagger-ui from your file system and look at the debug console.  If CORS is not enabled, you'll see something like this:\n\n```\nXMLHttpRequest cannot load http://sad.server.com/v2/api-docs. No 'Access-Control-Allow-Origin' header is present on the requested resource. Origin 'null' is therefore not allowed access.\n```\n\nSwagger-UI cannot easily show this error state.\n\n- Using the http://www.test-cors.org website. Keep in mind this will show a successful result even if `Access-Control-Allow-Headers` is not available, which is still required for Swagger-UI to function properly.\n\n### Enabling CORS\n\nThe method of enabling CORS depends on the server and/or framework you use to host your application. http://enable-cors.org provides information on how to enable CORS in some common web servers.\n\nOther servers/frameworks may provide you information on how to enable it specifically in their use case.\n\n### CORS and Header Parameters\n\nSwagger lets you easily send headers as parameters to requests.  The name of these headers *MUST* be supported in your CORS configuration as well.  From our example above:\n\n```\nAccess-Control-Allow-Headers: Content-Type, api_key, Authorization\n```\n\nOnly headers with these names will be allowed to be sent by Swagger-UI.\n\n## Security contact\n\nPlease disclose any security-related issues or vulnerabilities by emailing [security@swagger.io](mailto:security@swagger.io), instead of using the public issue tracker.\n\n## License\n\nCopyright 2017 SmartBear Software\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at [apache.org/licenses/LICENSE-2.0](http://www.apache.org/licenses/LICENSE-2.0)\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/swagger-api/swagger-ui.git"
  },
  "scripts": {
    "build": "npm run build-core && npm run build-bundle && npm run build-standalone",
    "build-bundle": "webpack --config webpack-dist-bundle.config.js --colors",
    "build-core": "webpack --config webpack-dist.config.js --colors",
    "build-standalone": "webpack --config webpack-dist-standalone.config.js --colors",
    "deps-check": "npm run deps-license && npm run deps-size",
    "deps-license": "license-checker --production --csv --out $npm_package_config_deps_check_dir/licenses.csv && license-checker --development --csv --out $npm_package_config_deps_check_dir/licenses-dev.csv",
    "deps-size": "webpack -p --config webpack.check.js --json | webpack-bundle-size-analyzer >| $npm_package_config_deps_check_dir/sizes.txt",
    "dev": "npm-run-all --parallel hot-server open-localhost",
    "e2e": "npm-run-all --parallel -r hot-server mock-api test-e2e",
    "e2e-initial-render": "nightwatch test/e2e/scenarios/ --config test/e2e/nightwatch.json --group initial-render",
    "hot-server": "webpack-dev-server --host 0.0.0.0 --config webpack-hot-dev-server.config.js --inline --hot --progress --content-base dev-helpers/",
    "just-test": "karma start --config karma.conf.js",
    "just-test-in-node": "mocha --recursive --compilers js:babel-core/register test/core test/components test/bugs test/swagger-ui-dist-package",
    "lint": "eslint --cache --ext '.js,.jsx' src test",
    "lint-errors": "eslint --cache --quiet --ext '.js,.jsx' src test",
    "lint-fix": "eslint --cache --ext '.js,.jsx' src test --fix",
    "mock-api": "json-server --watch test/e2e/db.json --port 3204",
    "open-localhost": "node -e 'require(\"open\")(\"http://localhost:3200\")'",
    "predev": "npm install",
    "test": "npm run lint-errors && npm run just-test-in-node",
    "test-e2e": "sleep 3 && nightwatch test/e2e/scenarios/ --config test/e2e/nightwatch.json",
    "test-in-node": "npm run lint-errors && npm run just-test-in-node",
    "watch": "webpack --config webpack-watch.config.js --watch --progress"
  },
  "version": "3.3.1"
}
